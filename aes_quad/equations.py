from sage.all import var
var('zz')
def biaffine23(x, z):
    return [
        #0 == zz - zz + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1] + x[1],
        #0 == zz - zz + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1] + x[1],
        #0 == zz - zz + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1] + x[1] + x[1],
        #0 == zz - zz + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1] + x[1] + x[1] + x[1],
        #0 == zz - zz + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1] + x[1] + x[1],
        #0 == zz - zz + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1] + x[1] + x[1],
        #0 == zz - zz + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1]*z[1] + x[1] + x[1] + x[1],

        0 == zz - zz + x[1]*z[0] + x[4]*z[0] + x[5]*z[0] + x[0]*z[1] + x[3]*z[1] + x[4]*z[1] + x[2]*z[2] + x[4]*z[2] + x[6]*z[2] + x[1]*z[3] + x[3]*z[3] + x[5]*z[3] + x[7]*z[3] + x[0]*z[4] + x[2]*z[4] + x[4]*z[4] + x[6]*z[4] + x[1]*z[5] + x[4]*z[5] + x[5]*z[5] + x[6]*z[5] + x[7]*z[5] + x[0]*z[6] + x[3]*z[6] + x[4]*z[6] + x[5]*z[6] + x[6]*z[6] + x[2]*z[7] + x[5]*z[7] + x[6]*z[7] + x[5] + x[7],
        0 == zz - zz + x[0]*z[0] + x[3]*z[0] + x[4]*z[0] + x[2]*z[1] + x[3]*z[1] + x[7]*z[1] + x[1]*z[2] + x[3]*z[2] + x[5]*z[2] + x[7]*z[2] + x[0]*z[3] + x[2]*z[3] + x[4]*z[3] + x[6]*z[3] + x[1]*z[4] + x[3]*z[4] + x[5]*z[4] + x[0]*z[5] + x[3]*z[5] + x[4]*z[5] + x[5]*z[5] + x[6]*z[5] + x[2]*z[6] + x[3]*z[6] + x[4]*z[6] + x[5]*z[6] + x[7]*z[6] + x[1]*z[7] + x[4]*z[7] + x[5]*z[7] + x[4] + x[6],
        0 == zz - zz + x[2]*z[0] + x[3]*z[0] + x[7]*z[0] + x[1]*z[1] + x[2]*z[1] + x[6]*z[1] + x[7]*z[1] + x[0]*z[2] + x[2]*z[2] + x[4]*z[2] + x[6]*z[2] + x[1]*z[3] + x[3]*z[3] + x[5]*z[3] + x[0]*z[4] + x[2]*z[4] + x[4]*z[4] + x[2]*z[5] + x[3]*z[5] + x[4]*z[5] + x[5]*z[5] + x[7]*z[5] + x[1]*z[6] + x[2]*z[6] + x[3]*z[6] + x[4]*z[6] + x[6]*z[6] + x[0]*z[7] + x[3]*z[7] + x[4]*z[7] + x[3] + x[5] + x[7],
        0 == zz - zz + x[1]*z[0] + x[2]*z[0] + x[6]*z[0] + x[7]*z[0] + x[0]*z[1] + x[1]*z[1] + x[5]*z[1] + x[6]*z[1] + x[7]*z[1] + x[1]*z[2] + x[3]*z[2] + x[5]*z[2] + x[0]*z[3] + x[2]*z[3] + x[4]*z[3] + x[1]*z[4] + x[3]*z[4] + x[1]*z[5] + x[2]*z[5] + x[3]*z[5] + x[4]*z[5] + x[6]*z[5] + x[0]*z[6] + x[1]*z[6] + x[2]*z[6] + x[3]*z[6] + x[5]*z[6] + x[7]*z[6] + x[2]*z[7] + x[3]*z[7] + x[7]*z[7] + x[2] + x[4] + x[6] + x[7],
        0 == zz - zz + x[0]*z[0] + x[4]*z[0] + x[6]*z[0] + x[7]*z[0] + x[3]*z[1] + x[5]*z[1] + x[6]*z[1] + x[0]*z[2] + x[6]*z[2] + x[5]*z[3] + x[7]*z[3] + x[4]*z[4] + x[6]*z[4] + x[0]*z[5] + x[2]*z[5] + x[3]*z[5] + x[4]*z[5] + x[6]*z[5] + x[1]*z[6] + x[2]*z[6] + x[3]*z[6] + x[5]*z[6] + x[7]*z[6] + x[1]*z[7] + x[5]*z[7] + x[7]*z[7] + x[1] + x[3] + x[6],
        0 == zz - zz + x[1]*z[0] + x[3]*z[0] + x[4]*z[0] + x[6]*z[0] + x[0]*z[1] + x[2]*z[1] + x[3]*z[1] + x[5]*z[1] + x[7]*z[1] + x[2]*z[2] + x[4]*z[2] + x[5]*z[2] + x[6]*z[2] + x[7]*z[2] + x[1]*z[3] + x[3]*z[3] + x[4]*z[3] + x[5]*z[3] + x[6]*z[3] + x[7]*z[3] + x[0]*z[4] + x[2]*z[4] + x[3]*z[4] + x[4]*z[4] + x[5]*z[4] + x[6]*z[4] + x[7]*z[4] + x[2]*z[5] + x[3]*z[5] + x[4]*z[5] + x[6]*z[5] + x[1]*z[6] + x[2]*z[6] + x[3]*z[6] + x[5]*z[6] + x[0]*z[7] + x[2]*z[7] + x[4]*z[7] + x[5]*z[7] + x[7]*z[7] + x[0] + x[2] + x[7],
        0 == zz - zz + x[0]*z[0] + x[2]*z[0] + x[3]*z[0] + x[5]*z[0] + x[7]*z[0] + x[1]*z[1] + x[2]*z[1] + x[4]*z[1] + x[6]*z[1] + x[1]*z[2] + x[3]*z[2] + x[4]*z[2] + x[5]*z[2] + x[6]*z[2] + x[7]*z[2] + x[0]*z[3] + x[2]*z[3] + x[3]*z[3] + x[4]*z[3] + x[5]*z[3] + x[6]*z[3] + x[7]*z[3] + x[1]*z[4] + x[2]*z[4] + x[3]*z[4] + x[4]*z[4] + x[5]*z[4] + x[6]*z[4] + x[7]*z[4] + x[1]*z[5] + x[2]*z[5] + x[3]*z[5] + x[5]*z[5] + x[0]*z[6] + x[1]*z[6] + x[2]*z[6] + x[4]*z[6] + x[1]*z[7] + x[3]*z[7] + x[4]*z[7] + x[6]*z[7] + x[1] + x[6] + x[7],
        
        0 == zz - zz + x[3] + x[5] + x[6] + x[1] + x[2] * z[2] + x[5] * z[7] + x[7] * z[4] + x[7] * z[1] + x[7] * z[3] + x[0] * z[1] + x[6] * z[5] + x[6] * z[3] + x[7] * z[7] + x[4] * z[6] + x[4] * z[1] + x[4] * z[5] + x[4] * z[0] + x[4] * z[2] + x[1] * z[5] + x[1] * z[3] + x[5] * z[5] + x[5] * z[3] + x[5] * z[0] + x[3] * z[1] + x[3] * z[3] + x[6] * z[6] + x[3] * z[4] + x[2] * z[3] + x[2] * z[6] + x[4] * z[7] + x[0] * z[5] + x[0] * z[3] + x[1] * z[4] + x[1] * z[7] + x[6] * z[1] + x[3] * z[0] + x[4] * z[3] + x[0] * z[7] + x[1] * z[6] + x[2] * z[5],
        0 == zz - zz + x[3] + x[6] + x[1] + x[2] * z[4] + x[5] * z[1] + x[7] * z[1] + x[5] * z[6] + x[0] * z[6] + x[0] * z[4] + x[6] * z[3] + x[6] * z[4] + x[6] * z[7] + x[7] * z[7] + x[7] * z[5] + x[7] * z[2] + x[4] * z[5] + x[4] * z[0] + x[1] * z[5] + x[1] * z[3] + x[5] * z[5] + x[5] * z[3] + x[3] * z[1] + x[3] * z[3] + x[3] * z[6] + x[2] * z[1] + x[2] * z[3] + x[4] * z[7] + x[0] * z[5] + x[0] * z[3] + x[1] * z[2] + x[6] * z[1] + x[3] * z[5] + x[3] * z[0] + x[3] * z[2] + x[4] * z[3] + x[0] * z[7] + x[3] * z[7] + x[1] * z[6] + x[2] * z[0],
        0 == zz - zz + x[3] + x[4] + x[5] + x[1] + x[2] * z[2] + x[2] * z[7] + x[5] * z[1] + x[5] * z[4] + x[5] * z[7] + x[7] * z[6] + x[7] * z[4] + x[7] * z[1] + x[0] * z[6] + x[6] * z[5] + x[6] * z[2] + x[6] * z[7] + x[7] * z[7] + x[4] * z[6] + x[4] * z[1] + x[4] * z[5] + x[1] * z[3] + x[1] * z[0] + x[5] * z[3] + x[3] * z[3] + x[2] * z[1] + x[2] * z[3] + x[2] * z[6] + x[0] * z[5] + x[0] * z[3] + x[1] * z[4] + x[6] * z[1] + x[3] * z[5] + x[3] * z[0] + x[4] * z[3] + x[0] * z[2] + x[3] * z[7] + x[1] * z[1] + x[2] * z[5] + x[2] * z[0],
        0 == zz - zz + x[3] + x[4] + x[1] + x[2] * z[7] + x[5] * z[1] + x[5] * z[7] + x[7] * z[4] + x[0] * z[4] + x[0] * z[1] + x[6] * z[4] + x[6] * z[7] + x[7] * z[7] + x[7] * z[5] + x[7] * z[2] + x[4] * z[4] + x[4] * z[1] + x[1] * z[5] + x[1] * z[3] + x[1] * z[0] + x[5] * z[5] + x[3] * z[1] + x[3] * z[3] + x[3] * z[6] + x[6] * z[6] + x[5] * z[2] + x[2] * z[3] + x[4] * z[7] + x[0] * z[3] + x[0] * z[0] + x[1] * z[2] + x[1] * z[7] + x[6] * z[1] + x[3] * z[5] + x[4] * z[3] + x[1] * z[1] + x[1] * z[6] + x[2] * z[5] + x[2] * z[0],
        0 == zz - zz + x[2] + x[6] + x[7] + x[1] + x[2] * z[2] + x[5] * z[1] + x[5] * z[4] + x[7] * z[4] + x[7] * z[1] + x[5] * z[6] + x[7] * z[3] + x[0] * z[6] + x[6] * z[3] + x[6] * z[2] + x[6] * z[4] + x[6] * z[7] + x[7] * z[7] + x[7] * z[2] + x[4] * z[6] + x[4] * z[0] + x[1] * z[0] + x[5] * z[5] + x[5] * z[3] + x[5] * z[0] + x[6] * z[6] + x[2] * z[1] + x[0] * z[0] + x[1] * z[4] + x[6] * z[1] + x[3] * z[0] + x[4] * z[3] + x[0] * z[2] + x[3] * z[7] + x[1] * z[6],
        0 == zz - zz + x[2] + x[3] + x[4] + x[5] + x[1] + x[2] * z[2] + x[2] * z[7] + x[5] * z[1] + x[5] * z[4] + x[7] * z[6] + x[7] * z[1] + x[5] * z[6] + x[0] * z[6] + x[0] * z[4] + x[0] * z[1] + x[6] * z[5] + x[6] * z[2] + x[6] * z[4] + x[6] * z[7] + x[7] * z[2] + x[4] * z[4] + x[4] * z[2] + x[1] * z[5] + x[1] * z[3] + x[5] * z[5] + x[5] * z[0] + x[3] * z[1] + x[3] * z[6] + x[6] * z[6] + x[5] * z[2] + x[3] * z[4] + x[2] * z[3] + x[2] * z[6] + x[4] * z[7] + x[0] * z[5] + x[0] * z[3] + x[0] * z[0] + x[1] * z[2] + x[1] * z[4] + x[1] * z[7] + x[0] * z[7] + x[1] * z[1] + x[1] * z[6] + x[2] * z[5] + x[2] * z[0],
        0 == zz - zz + x[0] + x[2] + x[3] + x[7] + x[2] * z[4] + x[5] * z[4] + x[5] * z[7] + x[7] * z[6] + x[7] * z[1] + x[5] * z[6] + x[0] * z[6] + x[0] * z[4] + x[0] * z[1] + x[6] * z[2] + x[7] * z[7] + x[4] * z[6] + x[4] * z[4] + x[4] * z[1] + x[4] * z[5] + x[4] * z[0] + x[4] * z[2] + x[1] * z[5] + x[1] * z[3] + x[1] * z[0] + x[5] * z[5] + x[6] * z[6] + x[5] * z[2] + x[3] * z[4] + x[2] * z[1] + x[2] * z[6] + x[7] * z[0] + x[0] * z[5] + x[0] * z[3] + x[1] * z[2] + x[1] * z[7] + x[6] * z[1] + x[3] * z[2] + x[0] * z[2] + x[0] * z[7] + x[3] * z[7] + x[1] * z[6],
        0 == zz - zz + x[3] + x[5] + x[2] * z[4] + x[2] * z[7] + x[5] * z[1] + x[5] * z[7] + x[7] * z[6] + x[7] * z[1] + x[5] * z[6] + x[7] * z[3] + x[0] * z[6] + x[0] * z[1] + x[6] * z[5] + x[6] * z[3] + x[6] * z[0] + x[6] * z[7] + x[7] * z[5] + x[4] * z[4] + x[4] * z[1] + x[4] * z[0] + x[1] * z[5] + x[1] * z[3] + x[5] * z[5] + x[5] * z[3] + x[5] * z[0] + x[3] * z[3] + x[3] * z[6] + x[5] * z[2] + x[2] * z[3] + x[2] * z[6] + x[0] * z[0] + x[1] * z[7] + x[3] * z[5] + x[3] * z[2] + x[4] * z[3] + x[0] * z[2] + x[1] * z[1] + x[2] * z[5],
        
        0 == zz - zz + x[5] + x[7] + z[7] + z[5] + z[3] + z[1] + x[5] * z[1] + x[5] * z[4] + x[7] * z[3] + x[0] * z[6] + x[0] * z[4] + x[0] * z[1] + x[6] * z[3] + x[7] * z[2] + x[4] * z[4] + x[4] * z[2] + x[1] * z[5] + x[1] * z[0] + x[5] * z[3] + x[6] * z[6] + x[3] * z[4] + x[2] * z[3] + x[4] * z[7] + x[7] * z[0] + x[6] * z[1] + x[3] * z[7] + x[2] * z[5] + x[2] * z[0],
        0 == zz - zz + x[3] + x[5] + x[7] + z[6] + z[7] + z[5] + z[4] + z[3] + x[2] * z[2] + x[2] * z[4] + x[2] * z[7] + x[7] * z[1] + x[6] * z[5] + x[6] * z[0] + x[6] * z[2] + x[6] * z[4] + x[7] * z[7] + x[7] * z[2] + x[4] * z[6] + x[4] * z[1] + x[5] * z[3] + x[5] * z[0] + x[3] * z[1] + x[3] * z[3] + x[6] * z[6] + x[5] * z[2] + x[3] * z[4] + x[0] * z[5] + x[0] * z[3] + x[0] * z[0] + x[1] * z[4] + x[1] * z[7] + x[6] * z[1] + x[4] * z[3],
        0 == zz - zz + x[3] + x[5] + x[6] + x[7] + x[1] + z[6] + z[5] + z[3] + z[2] + x[5] * z[1] + x[5] * z[7] + x[7] * z[6] + x[7] * z[1] + x[0] * z[4] + x[6] * z[5] + x[6] * z[3] + x[6] * z[0] + x[6] * z[7] + x[4] * z[6] + x[4] * z[4] + x[4] * z[1] + x[4] * z[5] + x[4] * z[0] + x[4] * z[2] + x[1] * z[3] + x[3] * z[3] + x[6] * z[6] + x[5] * z[2] + x[2] * z[1] + x[2] * z[3] + x[2] * z[6] + x[7] * z[0] + x[1] * z[4] + x[3] * z[0] + x[3] * z[2] + x[0] * z[2] + x[0] * z[7] + x[1] * z[1],
        0 == zz - zz + x[3] + x[4] + x[5] + x[1] + z[4] + z[3] + z[1] + z[0] + x[2] * z[2] + x[2] * z[4] + x[5] * z[1] + x[5] * z[6] + x[0] * z[6] + x[0] * z[1] + x[6] * z[5] + x[6] * z[2] + x[6] * z[4] + x[6] * z[7] + x[7] * z[7] + x[7] * z[5] + x[4] * z[6] + x[4] * z[5] + x[4] * z[0] + x[1] * z[3] + x[1] * z[0] + x[5] * z[0] + x[3] * z[1] + x[6] * z[6] + x[2] * z[1] + x[2] * z[6] + x[4] * z[7] + x[7] * z[0] + x[0] * z[3] + x[1] * z[2] + x[3] * z[2] + x[4] * z[3] + x[3] * z[7] + x[2] * z[5] + x[2] * z[0],
        0 == zz - zz + x[2] + x[3] + x[5] + x[6] + x[1] + z[6] + z[2] + z[0] + x[2] * z[7] + x[5] * z[1] + x[5] * z[4] + x[5] * z[7] + x[7] * z[6] + x[7] * z[4] + x[7] * z[3] + x[6] * z[5] + x[7] * z[7] + x[7] * z[2] + x[4] * z[6] + x[4] * z[5] + x[1] * z[5] + x[1] * z[0] + x[5] * z[5] + x[5] * z[3] + x[5] * z[0] + x[3] * z[1] + x[3] * z[6] + x[6] * z[6] + x[3] * z[4] + x[2] * z[6] + x[7] * z[0] + x[0] * z[5] + x[0] * z[0] + x[1] * z[2] + x[1] * z[7] + x[6] * z[1] + x[3] * z[0] + x[0] * z[2] + x[3] * z[7] + x[1] * z[1],
        0 == zz - zz + x[0] + x[3] + x[4] + x[5] + x[1] + z[6] + z[7] + z[5] + z[4] + z[3] + z[1] + z[0] + x[5] * z[1] + x[5] * z[7] + x[7] * z[4] + x[5] * z[6] + x[0] * z[4] + x[0] * z[1] + x[6] * z[5] + x[6] * z[3] + x[6] * z[0] + x[6] * z[4] + x[7] * z[7] + x[7] * z[5] + x[4] * z[6] + x[4] * z[4] + x[4] * z[1] + x[4] * z[5] + x[4] * z[2] + x[1] * z[5] + x[5] * z[0] + x[3] * z[1] + x[3] * z[3] + x[6] * z[6] + x[5] * z[2] + x[2] * z[3] + x[2] * z[6] + x[4] * z[7] + x[7] * z[0] + x[1] * z[4] + x[1] * z[7] + x[6] * z[1] + x[3] * z[5] + x[3] * z[0] + x[0] * z[7] + x[1] * z[1] + x[1] * z[6] + x[2] * z[0],
        0 == zz - zz + x[2] + x[3] + x[7] + x[1] + z[6] + z[7] + z[5] + z[4] + z[3] + z[2] + z[1] + 1 + x[2] * z[2] + x[2] * z[4] + x[2] * z[7] + x[5] * z[4] + x[5] * z[7] + x[7] * z[1] + x[7] * z[3] + x[0] * z[6] + x[6] * z[5] + x[6] * z[3] + x[6] * z[0] + x[6] * z[2] + x[6] * z[4] + x[6] * z[7] + x[7] * z[7] + x[4] * z[6] + x[4] * z[4] + x[4] * z[1] + x[4] * z[5] + x[4] * z[0] + x[1] * z[5] + x[1] * z[3] + x[1] * z[0] + x[5] * z[5] + x[5] * z[0] + x[3] * z[1] + x[3] * z[6] + x[2] * z[1] + x[2] * z[6] + x[0] * z[3] + x[0] * z[0] + x[3] * z[0] + x[3] * z[2] + x[4] * z[3] + x[3] * z[7] + x[1] * z[1] + x[2] * z[5],
        0 == zz - zz + x[0] + x[7] + x[1] + z[6] + z[2] + z[1] + z[0] + 1 + x[2] * z[4] + x[5] * z[4] + x[5] * z[7] + x[7] * z[4] + x[7] * z[1] + x[7] * z[3] + x[6] * z[2] + x[6] * z[4] + x[6] * z[7] + x[4] * z[5] + x[4] * z[0] + x[1] * z[5] + x[2] * z[1] + x[2] * z[6] + x[0] * z[5] + x[1] * z[2] + x[1] * z[7] + x[3] * z[5] + x[3] * z[0] + x[4] * z[3] + x[0] * z[2] + x[0] * z[7] + x[1] * z[1] + x[1] * z[6]
    ]